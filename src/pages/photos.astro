---
import Layout from '../layouts/Layout.astro';

const photos = [
	{
		src: "https://images.unsplash.com/photo-1682687220742-aba13b6e50ba",
		title: "Spring Morning",
		date: "April 2024"
	},
	{
		src: "https://images.unsplash.com/photo-1682687220063-4742bd7c8f1b",
		title: "Urban Lights",
		date: "March 2024"
	},
	{
		src: "https://images.unsplash.com/photo-1682687220199-d0124f48f95b",
		title: "Quiet Moments",
		date: "March 2024"
	}
];
---

<Layout title="Photos">
	<div class="photos">
		<h1>Photography</h1>
		<div class="photo-grid">
			{photos.map((photo, index) => (
				<div class="photo-item" data-photo={photo.src}>
					<div class="photo-wrapper">
						<img src={photo.src} alt={photo.title} loading="lazy" />
						<div class="photo-overlay">
							<h3>{photo.title}</h3>
							<p>{photo.date}</p>
						</div>
					</div>
				</div>
			))}
		</div>
	</div>

	<div class="modal" id="photoModal">
		<button class="close-modal">Ã—</button>
		<img src="" alt="Enlarged photo" />
	</div>
</Layout>

<script>
	const modal = document.getElementById('photoModal');
	const modalImg = modal?.querySelector('img');
	const photoItems = document.querySelectorAll('.photo-item');
	const closeButton = modal?.querySelector('.close-modal');

	photoItems.forEach(item => {
		item.addEventListener('click', () => {
			const photoSrc = item.dataset.photo;
			if (modalImg && photoSrc) {
				modalImg.src = photoSrc;
				modal?.classList.add('active');
				document.body.style.overflow = 'hidden';
			}
		});
	});

	modal?.addEventListener('click', (e) => {
		if (e.target === modal || e.target === closeButton) {
			modal.classList.remove('active');
			document.body.style.overflow = 'auto';
		}
	});

	document.addEventListener('keydown', (e) => {
		if (e.key === 'Escape' && modal?.classList.contains('active')) {
			modal.classList.remove('active');
			document.body.style.overflow = 'auto';
		}
	});
</script>

<style>
	.photos {
		max-width: 1200px;
		width: 100%;
		padding: 0 1rem;
	}
	h1 {
		font-size: 2.5rem;
		margin-bottom: 2rem;
		color: var(--accent-color);
		text-align: center;
	}
	.photo-grid {
		display: grid;
		grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		gap: 1.5rem;
		padding: 1rem;
	}
	.photo-item {
		position: relative;
		cursor: pointer;
		aspect-ratio: 1;
	}
	.photo-wrapper {
		position: relative;
		width: 100%;
		height: 100%;
		overflow: hidden;
		border-radius: 8px;
		box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
	}
	.photo-item img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform 0.3s ease;
	}
	.photo-overlay {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		padding: 1.5rem;
		background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
		color: white;
		opacity: 0;
		transition: opacity 0.3s ease;
	}
	.photo-wrapper:hover img {
		transform: scale(1.05);
	}
	.photo-wrapper:hover .photo-overlay {
		opacity: 1;
	}
	.photo-overlay h3 {
		font-size: 1.2rem;
		margin-bottom: 0.5rem;
	}
	.photo-overlay p {
		font-size: 0.9rem;
		opacity: 0.8;
	}
	.modal {
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(0, 0, 0, 0.9);
		z-index: 1000;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.3s ease;
	}
	.modal.active {
		opacity: 1;
		pointer-events: auto;
		display: flex;
		align-items: center;
		justify-content: center;
	}
	.modal img {
		max-width: 95vw;
		max-height: 95vh;
		width: auto;
		height: auto;
		object-fit: contain;
		border-radius: 4px;
	}
	.close-modal {
		position: fixed;
		top: 1rem;
		right: 1rem;
		background: none;
		border: none;
		color: white;
		font-size: 2rem;
		cursor: pointer;
		padding: 0.5rem;
		z-index: 1001;
	}
	.close-modal:hover {
		opacity: 0.8;
	}

	@media (max-width: 768px) {
		.photo-grid {
			grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
			gap: 1rem;
			padding: 0.5rem;
		}
		h1 {
			font-size: 2rem;
			margin-bottom: 1.5rem;
		}
		.photo-overlay {
			padding: 1rem;
		}
		.photo-overlay h3 {
			font-size: 1rem;
		}
		.photo-overlay p {
			font-size: 0.8rem;
		}
	}

	@media (max-width: 480px) {
		.photo-grid {
			grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
			gap: 0.8rem;
		}
		.photos {
			padding: 0 0.5rem;
		}
	}
</style>